<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lew.jlight.web.entity.User">
    <resultMap type="com.lew.jlight.web.entity.User" id="User">
        <result column="user_id" property="userId"/>
        <result column="account" property="account"/>
        <result column="true_name" property="trueName"/>
        <result column="password" property="password"/>
        <result column="sex" property="sex"/>
        <result column="email" property="email"/>
        <result column="mobile" property="mobile"/>
        <result column="error_count" property="errorCount"/>
        <result column="is_lock" property="isLock"/>
        <result column="login_time" property="mobile"/>
        <result column="login_ip" property="loginIp"/>
        <result column="is_delete" property="isDelete"/>
        <result column="create_by" property="createBy"/>
        <result column="create_time" property="createTime"/>
        <result column="update_by" property="updateBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="remark" property="remark"/>
    </resultMap>

    <insert id="insert" parameterType="com.lew.jlight.web.entity.User">
        insert into sys_user
        (user_id,account,true_name,password,sex,email,mobile,error_count,is_lock,login_time,login_ip,is_delete,create_by,create_time,update_by,update_time,remark)
        values(#{userId}, #{account}, #{trueName}, #{password}, #{sex}, #{email},
        #{mobile},#{errorCount},#{isLock},#{loginTime},#{loginIp},#{isDelete},#{createBy},#{createTime},#{updateBy},#{updateTime},#{remark})
    </insert>

    <update id="updateUser" parameterType="java.util.Map">
        update sys_user set
        account=#{account},password=#{password},mobile=#{mobile},email=#{email},true_name=#{trueName},is_lock=#{isLock}
        where user_id=#{userId}
    </update>

    <update id="updateLoginInfo" parameterType="java.util.Map">
        update sys_user set login_time = #{loginTime} , login_ip = #{loginIp} , error_count =
        #{errorCount} where user_id = #{userId}
    </update>

    <update id="updateUserErrorCount" parameterType="java.util.Map">
        update sys_user set error_count = #{errorCount} , is_lock = #{isLock} where user_id =
        #{userId}
    </update>

    <select id="getByUserId" parameterType="java.lang.String" resultMap="User">
        select * from sys_user where user_id = #{userId}
    </select>

    <select id="getByAccount" parameterType="java.lang.String" resultMap="User">
        select * from sys_user where account = #{account}
    </select>

    <select id="getList" resultType="Map" parameterType="java.util.Map">
        select user_id as userId,account as account ,true_name as trueName, is_lock as isLock ,
        mobile ,
        email ,create_time as createTime , update_time as updateTime ,login_time as loginTime ,
        login_ip as loginIp ,
        remark from sys_user
        <where>
            <if test="@Ognl@isNotEmpty(isDelete)">
                is_delete = #{isDelete}
            </if>
            <if test="@Ognl@isNotEmpty(userId)">
                and user_id like '%${userId}%'
            </if>
            <if test="@Ognl@isNotEmpty(account)">
                and account like '%${account}%'
            </if>
            <if test="@Ognl@isNotEmpty(trueName)">
                and true_name like '%${trueName}%'
            </if>
            <if test="@Ognl@isNotEmpty(mobile)">
                and mobile like '%${mobile}%'
            </if>
        </where>
        <if test="@Ognl@isNotEmpty(page)">
            limit #{page.firstIndex}, #{page.pageSize}
        </if>
    </select>

    <select id="getUserDetail" parameterType="java.lang.String" resultType="Map">
        select user_id as userId,account,password,mobile,email,true_name as trueName,is_lock as
        isLock,
        remark from sys_user where is_delete = 0 and user_id = #{userId}
    </select>

    <update id="updateDefaultPwd" parameterType="java.util.Map">
        update sys_user set password = #{defaultPwd} where user_id = #{userId}
    </update>

    <update id="updatePwd" parameterType="java.util.Map">
        update sys_user set password = #{newPassword} where user_id = #{userId}
    </update>

    <delete id="deleteByUserId" parameterType="java.lang.String">
        delete from sys_user where is_delete = 0 and user_id = #{userId}
    </delete>

     <select id="getPermission" parameterType="java.lang.String" resultType="java.lang.String" >
    	select m.url from sys_user u 
		left join sys_user_role ur on u.user_id = ur.user_id
		left join sys_role_menu rm on ur.role_id = rm.role_id
		left join sys_menu m on rm.menu_id = m.menu_id
		where u.account = #{account} and m.url is not null
    </select>

    <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) from sys_user
        <where>
            <if test="@Ognl@isNotEmpty(isDelete)">
                is_delete = #{isDelete}
            </if>
            <if test="@Ognl@isNotEmpty(userId)">
                and user_id like '%${userId}%'
            </if>
            <if test="@Ognl@isNotEmpty(account)">
                and account like '%${account}%'
            </if>
            <if test="@Ognl@isNotEmpty(trueName)">
                and true_name like '%${trueName}%'
            </if>
            <if test="@Ognl@isNotEmpty(mobile)">
                and mobile like '%${mobile}%'
            </if>
        </where>
    </select>
</mapper>