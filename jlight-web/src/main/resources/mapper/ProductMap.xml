<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lew.jlight.web.entity.Product">
    <resultMap type="com.lew.jlight.web.entity.Product" id="Product">
        <result column="productId" property="productId"/>
        <result column="productNum" property="productNum"/>
        <result column="productName" property="productName"/>
    </resultMap>

    <insert id="insert" parameterType="com.lew.jlight.web.entity.Product">
        insert into t_product
        (productNum,productName,brandName,cateId1,cateId2,cateId3,originalImg,thumbImg,marketPrice,salePrice,stock,saleCount,expressConfig,expressMoney,isOnsale,purchase,skuCustom,productDesc,sortNum,status,createTime,updateTime)
        values(#{productNum},#{productName},#{brandName},#{cateId1},#{cateId2},#{cateId3},#{originalImg},#{thumbImg},#{marketPrice},#{salePrice},#{stock},#{saleCount},#{expressConfig},#{expressMoney},#{isOnsale},#{purchase},#{skuCustom},#{productDesc},#{sortNum},#{status},#{createTime},#{updateTime})
    </insert>
    <select id="getList" resultType="Map" parameterType="java.util.Map">
        SELECT
        productId,productNum,productName,brandName,
        cateId1,(SELECT cateName FROM t_product_cate t2 WHERE t2.cateId = t1.cateId1) AS cateIdName1,
        cateId2,(SELECT cateName FROM t_product_cate t2 WHERE t2.cateId = t1.cateId2) AS cateIdName2,
        cateId3,(SELECT cateName FROM t_product_cate t2 WHERE t2.cateId = t1.cateId3) AS cateIdName3,
        originalImg,thumbImg,marketPrice,salePrice,stock,saleCount,expressConfig,expressMoney,isOnsale,purchase,skuCustom,productDesc,sortNum,STATUS,createTime,updateTime
        FROM t_product t1
        <where>
            <if test="@Ognl@isNotEmpty(productName)">
                productName = #{productName}
            </if>
        </where>
        <if test="@Ognl@isNotEmpty(page)">
            limit #{page.firstIndex}, #{page.pageSize}
        </if>
    </select>
    <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) from t_product
        <where>
            <if test="@Ognl@isNotEmpty(productName)">
                and productName like '%${productName}%'
            </if>
        </where>
    </select>
    <select id="getProductDetail" parameterType="java.lang.String" resultType="Map">
        SELECT productId,productNum,productName,brandName,cateId1,cateId2,cateId3,originalImg,thumbImg,marketPrice,salePrice,stock,saleCount,expressConfig,expressMoney,isOnsale,purchase,skuCustom,productDesc,sortNum,status,createTime,updateTime FROM t_product where productId = #{productId}
    </select>
    <update id="updateProduct" parameterType="java.util.Map">
        update t_product set
        productNum=#{productNum}, productName=#{productName}, brandName=#{brandName}, cateId1=#{cateId1}, cateId2=#{cateId2}, cateId3=#{cateId3}, originalImg=#{originalImg}, thumbImg=#{thumbImg}, marketPrice=#{marketPrice}, salePrice=#{salePrice}, stock=#{stock}, saleCount=#{saleCount}, expressConfig=#{expressConfig}, expressMoney=#{expressMoney}, isOnsale=#{isOnsale}, purchase=#{purchase}, skuCustom=#{skuCustom}, productDesc=#{productDesc}, sortNum=#{sortNum}, status=#{status}, updateTime=#{updateTime}
        where productId=#{productId}
    </update>
    <select id="getByProductId" parameterType="java.lang.String" resultMap="Product">
        select * from t_product where productId = #{productId}
    </select>
    <delete id="deleteByProductId" parameterType="java.lang.String">
        delete from t_product where productId = #{productId}
    </delete>
</mapper>