<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lew.jlight.web.entity.Dict">
    <resultMap type="com.lew.jlight.web.entity.Dict" id="Dict">
        <result column="id" property="id"/>
        <result column="parent_id" property="parentId"/>
        <result column="type" property="type"/>
        <result column="code" property="code"/>
        <result column="name" property="name"/>
        <result column="seq" property="seq"/>
        <result column="is_catagory" property="isCatagory"/>
        <result column="is_delete" property="isDelete"/>
        <result column="create_by" property="createBy"/>
        <result column="create_time" property="createTime"/>
        <result column="update_by" property="updateBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="remark" property="remark"/>
    </resultMap>

    <insert id="insert" parameterType="com.lew.jlight.web.entity.Dict">
        insert into sys_dict
        (parent_id,type,code,name,seq,is_catagory,is_delete,create_by,create_time,update_by,update_time,remark)
        values(#{parentId}, #{type}, #{code}, #{name}, #{seq},#{isCatagory},#{isDelete},#{createBy},#{createTime},#{updateBy},#{updateTime},#{remark})
    </insert>
    
    <update id="update" parameterType="com.lew.jlight.web.entity.Dict">
        update sys_dict set parent_id=#{parentId},type=#{type},code=#{code},name=#{name},seq=#{seq},is_catagory=#{isCatagory},update_time=#{updateTime},remark=#{remark}
        where id=#{id}
    </update>
    
    <select id="getList" parameterType="java.util.Map" resultMap="Dict">
    	select * from sys_dict
    	<where>
            <if test="@Ognl@isNotEmpty(isDelete)">
                is_delete = #{isDelete}
            </if>
            <if test="@Ognl@isNotEmpty(parentId)">
                and parent_id = #{parentId}
            </if>
        </where>
        order by create_time desc
        <if test="@Ognl@isNotEmpty(page)">
            limit #{page.firstIndex}, #{page.pageSize}
        </if>
    </select>

    <select id="getListByParentId" parameterType="java.lang.String" resultMap="Dict">
        select * from sys_dict where parent_id = #{parentId}
    </select>
    
    <select id="getCount" parameterType="java.util.Map" resultType="Integer">
        select count(*) from sys_dict
        <where>
            <if test="@Ognl@isNotEmpty(isDelete)">
                is_delete = #{isDelete}
            </if>
           <if test="@Ognl@isNotEmpty(parentId)">
                and parent_id = #{parentId}
            </if>
        </where>
    </select>
    
   <select id="getTree" parameterType="java.lang.String" resultType="Map">
        select DISTINCT(t1.id) as id,t1.parent_id as parent,t1.name as text,
       case when t1.is_catagory='N' then 'file' when t1.is_catagory='Y' then 'default' END 'type'
        from sys_dict t1 left join sys_dict t2 on t1.parent_id = t2.id
    </select>
    
	<select id="getCatagory" parameterType="java.lang.String" resultMap="Dict">
        select DISTINCT(t1.id) as id,t1.parent_id,t1.name
        from sys_dict t1 where t1.is_catagory = 'Y'
    </select>

    <select id="getById" parameterType="java.lang.String" resultMap="Dict">
        select * from sys_dict where id = #{id}
    </select>
    
     <delete id="delete" parameterType="java.lang.String">
        delete from sys_dict where id = #{id} or parent_id = #{id}
    </delete>

</mapper>